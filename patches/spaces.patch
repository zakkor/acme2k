diff --git a/src/cmd/acme/fns.h b/src/cmd/acme/fns.h
index 8dc0237..c0339c2 100644
--- a/src/cmd/acme/fns.h
+++ b/src/cmd/acme/fns.h
@@ -95,6 +95,7 @@ void		flushwarnings(void);
 void		startplumbing(void);
 long	nlcount(Text*, long, long, long*);
 long	nlcounttopos(Text*, long, long, long);
+Rune*	parsetag(Window*, int, int*);
 
 Runestr	runestr(Rune*, uint);
 Range range(int, int);
diff --git a/src/cmd/acme/look.c b/src/cmd/acme/look.c
index cbbc71b..d558111 100644
--- a/src/cmd/acme/look.c
+++ b/src/cmd/acme/look.c
@@ -477,9 +477,9 @@ includename(Text *t, Rune *r, int n)
 Runestr
 dirname(Text *t, Rune *r, int n)
 {
-	Rune *b, c;
-	uint m, nt;
-	int slash;
+	Rune *b;
+	uint nt;
+	int slash, i;
 	Runestr tmp;
 
 	b = nil;
@@ -490,15 +490,14 @@ dirname(Text *t, Rune *r, int n)
 		goto Rescue;
 	if(n>=1 && r[0]=='/')
 		goto Rescue;
-	b = runemalloc(nt+n+1);
+	b = parsetag(t->w, n, &i);
 	bufread(&t->w->tag.file->b, 0, b, nt);
 	slash = -1;
-	for(m=0; m<nt; m++){
-		c = b[m];
-		if(c == '/')
-			slash = m;
-		if(c==' ' || c=='\t')
-			break;
+	for(i--; i >= 0; i--){
+	        if(b[i] == '/'){
+		        slash = i;
+		        break;
+		}
 	}
 	if(slash < 0)
 		goto Rescue;
diff --git a/src/cmd/acme/wind.c b/src/cmd/acme/wind.c
index 19b52f5..5f4ceb4 100644
--- a/src/cmd/acme/wind.c
+++ b/src/cmd/acme/wind.c
@@ -110,18 +110,15 @@ windrawbutton(Window *w)
 int
 delrunepos(Window *w)
 {
-	int n;
-	Rune rune;
-	
-	for(n=0; n<w->tag.file->b.nc; n++) {
-		bufread(&w->tag.file->b, n, &rune, 1);
-		if(rune == ' ')
-			break;
-	}
-	n += 2;
-	if(n >= w->tag.file->b.nc)
+ 	Rune *r;
+ 	int i;
+
+ 	r = parsetag(w, 0, &i);
+ 	free(r);
+ 	i += 2;
+ 	if(i >= w->tag.file->b.nc)
 		return -1;
-	return n;
+	return i;
 }
 
 void
@@ -419,11 +416,7 @@ wincleartag(Window *w)
 
 	/* w must be committed */
 	n = w->tag.file->b.nc;
-	r = runemalloc(n);
-	bufread(&w->tag.file->b, 0, r, n);
-	for(i=0; i<n; i++)
-		if(r[i]==' ' || r[i]=='\t')
-			break;
+	r = parsetag(w, 0, &i);
 	for(; i<n; i++)
 		if(r[i] == '|')
 			break;
@@ -440,6 +433,38 @@ wincleartag(Window *w)
 	textsetselect(&w->tag, w->tag.q0, w->tag.q1);
 }
 
+Rune*
+parsetag(Window *w, int extra, int *len)
+ {
+ 	static Rune Ldelsnarf[] = { ' ', 'D', 'e', 'l', ' ', 'S', 'n', 'a', 'r', 'f', 0 };
+ 	static Rune Lspacepipe[] = { ' ', '|', 0 };
+ 	static Rune Ltabpipe[] = { '\t', '|', 0 };
+ 	int i;
+ 	Rune *r, *p, *pipe;
+
+ 	r = runemalloc(w->tag.file->b.nc+extra+1);
+ 	bufread(&w->tag.file->b, 0, r, w->tag.file->b.nc);
+ 	r[w->tag.file->b.nc] = '\0';
+
+	/*
+	 * " |" or "\t|" ends left half of tag
+	 * If we find " Del Snarf" in the left half of the tag
+	 * (before the pipe), that ends the file name.
+	 */
+	pipe = runestrstr(r, Lspacepipe);
+	if((p = runestrstr(r, Ltabpipe)) != nil && (pipe == nil || p < pipe))
+		pipe = p;
+	if((p = runestrstr(r, Ldelsnarf)) != nil && (pipe == nil || p < pipe))
+		i = p - r;
+	else {
+		for(i=0; i<w->tag.file->b.nc; i++)
+			if(r[i]==' ' || r[i]=='\t')
+				break;
+	}
+	*len = i;
+	return r;
+}
+
 void
 winsettag1(Window *w)
 {
@@ -458,12 +483,7 @@ winsettag1(Window *w)
 	/* there are races that get us here with stuff in the tag cache, so we take extra care to sync it */
 	if(w->tag.ncache!=0 || w->tag.file->mod)
 		wincommit(w, &w->tag);	/* check file name; also guarantees we can modify tag contents */
-	old = runemalloc(w->tag.file->b.nc+1);
-	bufread(&w->tag.file->b, 0, old, w->tag.file->b.nc);
-	old[w->tag.file->b.nc] = '\0';
-	for(i=0; i<w->tag.file->b.nc; i++)
-		if(old[i]==' ' || old[i]=='\t')
-			break;
+	old = parsetag(w, 0, &i);
 	if(runeeq(old, i, w->body.file->name, w->body.file->nname) == FALSE){
 		textdelete(&w->tag, 0, i, TRUE);
 		textinsert(&w->tag, 0, w->body.file->name, w->body.file->nname, TRUE);
@@ -583,11 +603,7 @@ wincommit(Window *w, Text *t)
 			textcommit(f->text[i], FALSE);	/* no-op for t */
 	if(t->what == Body)
 		return;
-	r = runemalloc(w->tag.file->b.nc);
-	bufread(&w->tag.file->b, 0, r, w->tag.file->b.nc);
-	for(i=0; i<w->tag.file->b.nc; i++)
-		if(r[i]==' ' || r[i]=='\t')
-			break;
+	r = parsetag(w, 0, &i);
 	if(runeeq(r, i, w->body.file->name, w->body.file->nname) == FALSE){
 		seq++;
 		filemark(w->body.file);
